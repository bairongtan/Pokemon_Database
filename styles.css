* {
    box-sizing: border-box;
  }
  
  /* 
    These rules apply to actual HTML elements with no labelling!
    So: they style the tags directly
  */
  
  html {
    background-color: #fff;
    font-size: 16px;
    min-width: 300px;
    overflow-x: hidden;
    overflow-y: scroll;
  
    /* these are specific to different browsers */
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  body {
    margin: 0;
    padding: 0;
  
    font-family: ‘Segoe UI’, Candara, ‘Bitstream Vera Sans’, ‘DejaVu Sans’, ‘Bitsream Vera Sans’, ‘Trebuchet MS’, Verdana, ‘Verdana Ref’, sans-serif;
    font-weight: 400;
    line-height: 1.5;
    background-color: #DEE7E7;
  }
  
  
  a {
    display: inline-block;
    text-decoration: none;
  }
  
  h2, h3 {
    color: #1241ec;
    font-family: 'Lucida Sans';
    font-size: 1.4rem;
    margin:0;
    padding:0;
    padding-bottom:1.5rem;
  }
  
  form {
    accent-color: hsla(120, 100%, 50%, 0.482);
  }
  
  /*
    - These styles use 'class names'
    - You can apply them by using the 'class' attribute on your HTML
    - like this: <div class="wrapper">
    - note that the period vanishes there!
  */
  
  
  .wrapper {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    margin: 0;
    flex: 1;
  }
  
  .container {
    margin: 0 20px;
    display: flex;
    justify-content: space-evenly;
    align-items: start;
    flex:1;
  }
  
  .header {
    padding-top: 1rem;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 1.5rem;
  }
  
  
  /*
    This rule implies that the H1 tag lives within another HTML tag
    It "inherits" some rules from the above
    Those rules won't apply to an h1 that's outside a block with the class of 'header'
  */
  
  .header h1 {
    display: block;
    /* this will push other blocks out of the way */
  
    /* colors */
    background-color: #99E1D9;
    color: #252a2c;
  
    /* shapes */
    font-family: 'Lucida Sans';
    border: 2px dashed;
    border-radius: 6px;
    font-size: 1.8rem;
    padding: 1.25rem;
    margin:0; /* removing the margin on h1 tags means the header pins to the top if we move */
  
  
    /* box-shadows are fancy */
    box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0 0 1px rgb(10 10 10 / 2%);
  }

  #map{
    width:400px;
    height: 380px;
    margin-bottom: 1rem;
  }
  
  
  /*
    Rules can be combined on a block to apply the 'cascade' in order
    So you can use two classnames in a single class attribute
    like: <div class="box section">
  
    Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
    And will be what displays in your client
  */
  
  .box {
    background-color: rgba(239, 239, 239, 0.40);
    border: 2.5px dashed;
    border-radius: 4px;
  
    width: fit-content;
    height:fit-content;
    padding: 1.5rem;
    margin: 0 auto;
  }
  
  .left_section {
    background-color: #F4FAFF;
    flex: 0 1 auto;
    margin: 1rem;
    padding: 1.5rem;
  
  }
  
  .right_section {
    background-color: #F4FAFF;
    flex: 1 2 auto;
    margin: 1rem;
    align-items: center;
    justify-content: center;
    display: flex;
    flex-direction: column;
  }
  
  
  .footer {
    border: 3px dashed;
    flex-shrink: 0;
    padding: 1rem;
    background-color: #bd8ec3;
    font-size: 1.2rem;
    font-weight: 600;
  }
  
  .footer a {
    color: rgb(106, 197, 228);
    text-decoration: underline;
  }
  
  /*
    This is an example of a 'pseudoclass'
    In this instance, it says what to do if a mouse hovers over a link
    This is pretty desktop-specific, since there's no hover function on touchscreens
  */
  .footer a:hover {
    /* Hue, saturation, luminosity, alpha */
    background-color: hsla(0, 0%, 90%, 0.15);
    /* red, green, blue, alpha */
    color: rgb(246, 169, 93);
    text-decoration: none;
  }
  
  .subtitle {
    color: rgba(0, 0, 0, 0.8);
    margin: 0px;
    margin-bottom: 5px;
  }
  
  .button {
    background-color: #4CAF50; /* Green */
    border: none;
    color: white;
    padding: 16px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    transition-duration: 0.4s;
    cursor: pointer;
  }
  .button1 {
    background-color: white; 
    color: black; 
    border: 2px solid #4CAF50;
  }
  
  .button1:hover {
    background-color: #4CAF50;
    color: white;
  }
  
  .button2 {
    background-color: white; 
    color: black; 
    border: 2px solid #008CBA;
  }
  
  .button2:hover {
    background-color: #008CBA;
    color: white;
  }
  
  .button3 {
    background-color: white; 
    color: black; 
    border: 2px solid #f44336;
  }
  
  .button3:hover {
    background-color: #f44336;
    color: white;
  }
  /* Deploy this with images as direct "children" and the images should pop into shape */
  .grid {
    display: flex;
    justify-content: space-evenly;
    flex-flow: wrap;
    width: 350px;
    height: 350px;
    margin: 0 auto;
  }
  
  .grid img {
    width: 150px;
    height: 150px;
  }
  
  
  
  /* How To Write A Media Query For Small Screens */
  
  @media only screen and (max-width: 736px){
      /* Rules in here will only apply when a screen is the correct size */
      /* check it out by using your developer tools to shrink your screen-size */
      .container {
        background-color: rgba(239, 143, 218, 0.65);
        flex-direction: column;
        justify-content: center;
        align-items: center;
        
      }

      .image{
        width: 240px;
        height: 160px;
      }
  
      .right_section {
        flex: 1 2 auto;
        justify-content: flex-start;
        align-items: flex-start;
      }

      .left_section{

        flex: 0 1 auto;
        align-items: center;
      }

      .box{
        width: 100%;
        width: -moz-available;
        width: -webkit-fill-available;
        width: fill-available;
        align-items: flex-start;       
      }
      .chart_container{
        display: flex;
        justify-content: center;
        align-items: center;
      }
  }
 
  .chart_container{
    height: 100%;
    width: 100%;
  }